# mccal: simple reminder calendar

mccal is not a "visual" calendar by any stretch of the imagination. This
simple little program is mainly useful for giving you reminders, which
you can snooze (as often as you like) for however many minutes, hours, or
days that you like. None of the (at the time I wrote this) available
calendars for Linux/UNIX had this kind of snoozing functionality. This
is the main reason I wrote mccal.

When an appointment becomes due, the program will pop up a window with the
appointment text, which you can then dismiss or snooze as desired. The
program also allows you to optionally indicate a set of commands it should
run at that time (e.g., emailing someone, ringing a bell, etc.). mccal uses
an external program to implement the window popup. Currently the options are
zenity, gxmessage, and cocoadialog (Mac OS).


requires:
---------

- Perl, Perl::DateTime, Perl::Time::HiRes, Net::OpenSSH, bash, (gxmessage|zenity|cocoadialog)
- Python 3.x

to install:
-----------

- copy the files addappointments, findappointment, remind, synccal,
  run_findapps.sh, and viewcal to a directory in your executable path
  (e.g., ~/bin).

- copy the file commonfuncs.pm to your "library" directory. If you are
  copying to a directory not visible to perl, you will have to
  explicitly add:

  BEGIN {
        push @INC, "<your library directory>";
  }

  to the top of the files: findappointment, remind.

- customise your window manager to run run_findapps.sh at startup.


user interface
--------------
1) addappointments

- writes an appointment entry to the calendar file

Usage: addappointments [file]
Entries must look like: [<weekly|biweekly|monthly|yearly> <N>]
                        [remind <N>]
                        [yyyy-mm-dd] HH:mm
                        [<text>[; command1; command2; ...]]

command1, command2, etc. are commands to execute upon the appointment
coming due (in addition to the popup gxmessage).

2) viewcal

- displays appointments

Usage:
viewcal [-h] [-f FILE] [-a] [-r] [{this,next,last}] PERIOD

3) run_findapps.sh

- wrapper for findappointments (see below). Kills existing processes
  before starting a new one.

- call this in your window manager's initialization script.

4) getmins

Usage: getmins NUMBER[m|h|d|w]

- handy extra tool to help in specyfying reminder times. Use like this:

$ echo "remind `getmins 24h` 2015-07-09 20:00 Office party"|addappointments 


"internal" files:
-----------------

1) commonfuncs.pm

- common functions used by all files

2) remind

- reminds the user of an appointment

3) findappointment

- checks calendar file periodically for due appointments

-----

To contact the author, see: www.michaelcuffaro.com
