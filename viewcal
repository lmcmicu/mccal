#!/usr/bin/env python3

# Copyright 2014-2024 Michael Cuffaro
# 
# This file is part of mccal.
# 
# mccal is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# mccal is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with mccal.  If not, see <http://www.gnu.org/licenses/>.

import argparse
import re


def grep_period(calendar_file, year, month, day):
  with open(calendar_file) as f:
    lines = []
    for line in f:
      line = line.rstrip('\n')
      grep_string = f"{year}"
      if month:
        grep_string += f"-0*{month}"
      if day:
        grep_string += f"-0*{day}"
      if re.search(grep_string, line):
        line = re.sub("^SNOOZE", "(Snoozed)", line)
        lines.append(line)
    return lines


def main(calendar_file, modifier, time_period):
  if m := re.fullmatch(r'(\d{1,4})(-(\d{1,2}))?(-(\d{1,2}))?', time_period):
    year = int(m.groups()[0])
    month = int(m.groups()[2])
    day = int(m.groups()[4])
    lines = grep_period(calendar_file, year, month, day)
    print('\n'.join(lines))
  elif re.fullmatch(r'today', time_period):
    print("today")
  elif re.fullmatch(r'month', time_period):
    print("month")
  elif re.fullmatch(r'year', time_period):
    print("year")
  else:
    print("Miscellaneous")


if __name__ == "__main__":
  parser = argparse.ArgumentParser(description="TODO: Add description")
  parser.add_argument('-f', '--calendar_file')
  parser.add_argument('MODIFIER', choices=['next', 'last'], nargs='?')
  parser.add_argument('TIME_PERIOD', help="Can be one of: year, month, week, monday, \
  tuesday, wednesday, thursday, friday, saturday, sunday, today, tomorrow, yesterday \
  yyyy-mm-dd, yyyy-mm, yyyy")
  args = parser.parse_args()
  main(args.calendar_file, args.MODIFIER, args.TIME_PERIOD)
